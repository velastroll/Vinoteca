
package dominio;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WS_Pedidos", targetNamespace = "http://dominio/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSPedidos {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "operation", targetNamespace = "http://dominio/", className = "dominio.Operation")
    @ResponseWrapper(localName = "operationResponse", targetNamespace = "http://dominio/", className = "dominio.OperationResponse")
    @Action(input = "http://dominio/WS_Pedidos/operationRequest", output = "http://dominio/WS_Pedidos/operationResponse")
    public String operation();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPedido", targetNamespace = "http://dominio/", className = "dominio.AddPedido")
    @ResponseWrapper(localName = "addPedidoResponse", targetNamespace = "http://dominio/", className = "dominio.AddPedidoResponse")
    @Action(input = "http://dominio/WS_Pedidos/addPedidoRequest", output = "http://dominio/WS_Pedidos/addPedidoResponse")
    public boolean addPedido(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        float arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3);

    /**
     * 
     * @return
     *     returns java.util.List<dominio.Pedido>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPedidosPendientes", targetNamespace = "http://dominio/", className = "dominio.GetPedidosPendientes")
    @ResponseWrapper(localName = "getPedidosPendientesResponse", targetNamespace = "http://dominio/", className = "dominio.GetPedidosPendientesResponse")
    @Action(input = "http://dominio/WS_Pedidos/getPedidosPendientesRequest", output = "http://dominio/WS_Pedidos/getPedidosPendientesResponse")
    public List<Pedido> getPedidosPendientes();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPedido", targetNamespace = "http://dominio/", className = "dominio.EditPedido")
    @ResponseWrapper(localName = "editPedidoResponse", targetNamespace = "http://dominio/", className = "dominio.EditPedidoResponse")
    @Action(input = "http://dominio/WS_Pedidos/editPedidoRequest", output = "http://dominio/WS_Pedidos/editPedidoResponse")
    public boolean editPedido(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
